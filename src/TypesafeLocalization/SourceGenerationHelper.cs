using System.Text;

namespace TypesafeLocalization;

public static class SourceGenerationHelper
{
    private const string FileHeaderComment = """
                                             //------------------------------------------------------------------------------
                                             // <auto-generated>
                                             //     This code was generated by the TypesafeLocalization source generator
                                             //
                                             //     Changes to this file may cause incorrect behavior and will be lost if
                                             //     the code is regenerated.
                                             // </auto-generated>
                                             //------------------------------------------------------------------------------
                                             """;

    private const string Namespace = "namespace TypesafeLocalization;";

    public static string LocalizerInterface(LocalizationInfo localizationInfo)
    {
        var stringBuilder = new StringBuilder();

        stringBuilder.AppendLine(FileHeaderComment);
        stringBuilder.AppendLine(Namespace);
        stringBuilder.AppendLine();

        stringBuilder.AppendLine("public interface ILocalizer");
        stringBuilder.AppendLine("{");

        foreach (var translation in localizationInfo.BaseTranslation.Dictionary)
        {
            stringBuilder.AppendLine($"    string {translation.Key}();");
        }

        stringBuilder.AppendLine("}");

        return stringBuilder.ToString();
    }

    public static string LocaleEnum(LocalizationInfo localizationInfo)
    {
        var stringBuilder = new StringBuilder();

        stringBuilder.AppendLine(FileHeaderComment);
        stringBuilder.AppendLine(Namespace);
        stringBuilder.AppendLine();

        stringBuilder.AppendLine("public enum Locale");
        stringBuilder.AppendLine("{");

        foreach (var translation in localizationInfo.Translations)
        {
            stringBuilder.AppendLine($"    {translation.NormalizedLocale},");
        }

        stringBuilder.AppendLine("}");

        return stringBuilder.ToString();
    }
}
